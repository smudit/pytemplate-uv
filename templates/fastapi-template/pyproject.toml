[project]
name = "{{cookiecutter.package_name}}"
version = "0.1.0"
description = "{{cookiecutter.description}}"
authors = ["{{cookiecutter.author_name}}"]
dependencies = [
    "fastapi>=0.109.0",
    "sqlmodel>=0.0.14",
    "uvicorn>=0.27.0",
    "python-dotenv>=1.0.0",
    "pydantic-settings>=2.1.0",
    "aiosqlite>=0.19.0",
    "python-multipart>=0.0.6",
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "structlog>=24.1.0",
]

[project.optional-dependencies]
dev = [
    "ruff>=0.1.9",
    "pytest>=7.4.4",
    {%- if cookiecutter.coverage == "y" %}
    "pytest-cov>=4.1.0",
    {%- endif %}
    "pytest-asyncio>=0.23.3",
    "httpx>=0.26.0",
    "black>=23.12.1",
    {%- if cookiecutter.docs == "y" %}
    "pdoc>=14.1.0",
    {%- endif %}
    {%- if cookiecutter.pyright == "y" %}
    "pyright>=1.1.344",
    {%- endif %}
    "pre-commit>=3.6.0",
]

[tool.ruff]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = []
line-length = 100

# Import sorting
src = ["{{cookiecutter.package_name}}"]
[tool.ruff.isort]
known-first-party = ["{{cookiecutter.package_name}}"]
combine-as-imports = true
lines-after-imports = 2

[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
include = ["{{cookiecutter.package_name}}", "{{cookiecutter.package_name}}.*"]

{%- if cookiecutter.pyright == "y" %}
[tool.pyright]
include = ["{{cookiecutter.package_name}}"]
exclude = ["**/__pycache__"]
typeCheckingMode = "basic"
useLibraryCodeForTypes = true
{%- endif %}

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "-v --cov={{cookiecutter.package_name}} --cov-report=term-missing"
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::UserWarning",
]

[tool.uv.scripts]
start = "fastapi run {{cookiecutter.package_name}}/main.py --host 0.0.0.0 --port 8000"
dev = "fastapi dev {{cookiecutter.package_name}}/main.py --host 0.0.0.0 --port 8000 --reload"
{%- if cookiecutter.coverage == "y" %}
test = "pytest tests/ --cov={{cookiecutter.package_name}} --cov-report=term-missing --cov-report=html:coverage"
{%- else %}
test = "pytest tests/"
{%- endif %}
lint = "ruff check ."
format = "ruff format ."
{%- if cookiecutter.pyright == "y" %}
typecheck = "pyright"
{%- endif %}
{%- if cookiecutter.docs == "y" %}
docs-serve = "pdoc --http localhost:8001 {{cookiecutter.package_name}}"
docs-build = "pdoc -o docs {{cookiecutter.package_name}}"
{%- endif %}
